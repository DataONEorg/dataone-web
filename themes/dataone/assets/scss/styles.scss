// screen width at which to switch from mobile view to desktop view
$breakpoint: {{.Site.Params.mobileDesktopBreakpoint}}px;
@import "colors.scss";
@import "definitions.scss";
@import "tables.scss"; //
// ==== GLOBAL RESET === /

html {
  box-sizing: border-box;
}

*,
*:after,
*:before {
  box-sizing: inherit;
}
// ==== BODY ====
//Basic link styling

a {
  text-decoration: none;
  color          : $cn-teal;
}

.page {
  // Use css variables for colours so that we can easily re-colour sub-block
  // elements within modified blocks.
  --col-title     : #{col($c-neutral, 8)};
  --col-font      : #{col($c-neutral, 7)};
  --col-backgroud : #{col($c-neutral, 1)};
  background-color: lighten(col($c-neutral, 1), 50%);
  color           : var(--col-font);
  margin          : 0;
  min-height      : 100vh;
  scroll-behavior : smooth;
  @include low-motion;
  overflow-y      : scroll;
  max-width       : 100vw;
  @include f-common;
}
// ==== ARTICLE ====

.article {
  display   : grid;
  height    : 100%;
  min-height: 40rem;

  ::-moz-selection {
    background-color: col($c-secondary, 5);
    color           : white;
  }

  ::-webkit-selection {
    background-color: col($c-secondary, 5);
    color           : white;
  }

  ::selection {
    background-color: col($c-secondary, 5);
    color           : white;
  }
}

.theme-quaternary {
  ::-moz-selection {
    background-color: col($c-quaternary, 5);
    color           : col($c-quaternary, 8);
  }

  ::-webkit-selection {
    background-color: col($c-quaternary, 5);
    color           : col($c-quaternary, 8);
  }

  ::selection {
    background-color: col($c-quaternary, 5);
    color           : col($c-quaternary, 8);
  }
}

.webinars {
  @include limit-width;
  display              : grid;
  justify-content      : center;
  grid-template-columns: 1fr;
  grid-gap             : 1.5rem;
  padding-top          : 4rem;
  @include desktop {
    grid-template-columns: 1fr 1fr;
  }
}
// ==== IMPORT ALL BLOCK SCSS ====
// Import all .scss files contained one subdirectory below the "blocks" directory
{{$blockDir :=  .Site.Params.blockDir}}
{{range (readDir $blockDir)}}

  // check that the name of the item in the blocks directory is another directory
  {{$dirname := .Name}}
  {{$blocksubdir := path.Join $blockDir $dirname}}
  {{$stat := os.Stat $blocksubdir}}
  {{if $stat.IsDir}}

    // read through the subdirectories of the block directory
    {{range (readDir $blocksubdir)}}

      // If the file is an .scss file, import it
      {{if (strings.HasSuffix .Name "scss")}}
        {{$blockscss := path.Join $blocksubdir .Name}}
        @import "{{ $blockscss }}";
      {{end}}
    {{end}}
  {{end}}
{{end}}