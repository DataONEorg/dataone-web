{{ $p := .Params.prefix }}

.{{ $p }}toc {

  // ==========================================================================
  //    Variables
  // ==========================================================================

  // Allow the block's base class to be used at all scopes within the block.
  // (bn = block name), use as: #{$bn}.
  $bn             : &;
  // Use the block's base class as a variable prefix (remove class selector . )
  $prefix         : "--" + str-replace(#{$bn}, ".");

  // Variables specific to this block, based on varibles set at higher scope
  // (e.g. .section), such that blocks can be themed from a higher level.
  // The value may change in modified blocks or elements (i.e. block--modifier).
  // Always use css variables along with a default value to maintain the block's
  // independence & modularity (a la BEM).

  // #{$prefix}- : var( , );
  //

  $TOCwidth: 250px;
  $itemHeight: auto;
  
  @mixin toc-item-spacing {
    padding: .6rem 1rem .6rem .6rem;
    margin : 0 0 .6rem;
  }
  
  // ==========================================================================
  //    Styles
  // ==========================================================================

  // Note that this block applies styles directly to HTML tags instead of to
  // classes as recommended by the BEM approach. This is because the TOC HTML
  // used to build the block is automatically generated by Hugo from markdown,
  // and as such, doesn't have any classes applied.

  @include f-common;
  @include desktop {
    display              : grid;
    grid-template-columns: minmax($TOCwidth, .4fr) auto;
  }
  
  // Very large screens, allow the TOC to stretch to the side
  @media only screen and (min-width: ($content-width + (2 * $TOCwidth) + 20)) {
    margin-left    : -$TOCwidth;
  }
  
  &__toc-container {
    margin    : 0 .5rem 2rem 0;
  }
  
  // Includes the TOC title, list & button
  &__toc {
    
    @include desktop {
      width     : $TOCwidth;
      margin-top: 5rem;
    }
    
    &--affixed-mobile {
      z-index              : 3;
      position             : fixed;
      top                  : 0;
      left                 : 0;
      background-color     : var(--section-c-background-lighter, white);
      width                : 100%;
      display              : grid;
      grid-template-columns: auto 70px;
      padding              : 0;
      box-shadow           : -22px 1px 11px rgba(0,0,0,0.15);
      // when the button is visible
      #{$bn}__button {
        display   : block;
        visibility: visible;
        text-align: center;
        color     : var(--section-fc-title, black);
        height    : auto;
        padding   : 8px 8px 15px;
        max-height: 60px;
        height    : 40px;
      }
      // undo properties for desktop
      @include desktop {
        position        : relative;
        background-color: unset;
        width           : $TOCwidth;
        display         : block;
        left            : auto;
        padding-top     : 0;
        box-shadow      : none;

        #{$bn}__button {
          display   : none;
          visibility: hidden;
        }
      }
    }
    
    &--affixed-desktop {
      @include desktop {
        position: fixed;
        top     : 0;
        z-index : 3;
        width   : $TOCwidth;
      }
    }

    // The TOC list
    ol,ul {
      margin              : 0;
      padding-inline-start: 0;
      margin-block-end    : 0;
      text-decoration     : none;
      
      // the active item on mobile when menu is closed
      &[aria-hidden="true"] li.active {
        margin-bottom: 0;
      }
      // all items when menu is open
      &[aria-hidden="false"] li {
        @include toc-item-spacing;
        opacity   : 1;
        visibility: visible;
        height    : $itemHeight;
      }
    }

    a {
      height         : 100%;
      text-decoration: none;
      font-weight : var(--fw-bold, 500);
      font-size : var(--fs-smaller, 0.9rem);
      display        : flex;
      flex-direction : row;
      align-items    : center;
      justify-content: space-between;
      color          : var(--section-fc-title, black);

      a:visited, a:hover, a:active {
        color: var(--section-fc-title, black);
      }
    }

    li {
      display   : block;
      opacity   : 0;
      visibility: hidden;
      transition: height .18s 0s ease-in-out, opacity .1s .17s ease-in-out, margin .18s 0s ease-in-out;
      height    : 0;
      overflow  : hidden;
      margin    : 0;
      padding   : 0;
      
      // Sub-lists generally (& when parent is not active, invisible)
      ol,ul {
        transition: max-height .18s 0s ease-in-out, opacity .1s .17s ease-in-out, margin .18s 0s ease-in-out;
        height: auto;
        margin: 0;
        max-height: 0;
        overflow: hidden;
        opacity: 0;
        
        // Sub-list items
        li {
          
          // Active sub-list items
          &.active{
            background-color: transparent;
            border-left: none;
            a, a:visited, a:hover, a:active {
              color: var(--section-c-accent);
            }
          }
          
          a, a:visited, a:hover, a:active {
            color : var(--section-fc-body, grey);
          }
        }
        // Last item of sub-lists
        li:last-child {
          margin-bottom: 0;
        }
      }

      &.active {
        background-color: var(--section-c-background-lighter, white);
        border-left     : 4px solid var(--section-c-accent, grey);
        margin-left     : -4px;
        opacity         : 1;
        visibility      : visible;
        height          : $itemHeight;
        @include toc-item-spacing;

        a, a:visited, a:hover, a:active {
          color: var(--section-fc-title, black);
        }
        
        // sub-lists when parent is active (visible)
        ol,ul{
          max-height: 500px;
          margin-top: 1rem;
          opacity: 1;
        }
      }
      
      
    }
  }
  
  &__button {
    @include button-reset;
    display   : none;
    visibility: hidden;
  }

  &__button-icon {
    stroke: var(--section-fc-title, black);
  }
  
  &__content{
    @include desktop {
      margin-left: 1.5rem;
    }
  }
  
}
