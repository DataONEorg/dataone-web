$mobile-nav-height: 63px;
$secondary-nav-height: 2.7rem; // height on desktop;
$icon-color: var(--c-neutral-1, white);
$nav-box-shadow: -1px 1px 20px 1px var(--c-shadow-2-on-major-accent);

{{ $p := .Params.prefix }}

.{{ $p }}nav {

  // ==========================================================================
  //    Variables
  // ==========================================================================

  // Allow the block's base class to be used at all scopes within the block.
  // (bn = block name), use as: #{$bn}.
  $bn             : &;
  // Use the block's base class as a variable prefix (remove class selector . )
  $prefix         : "--" + str-replace(#{$bn}, ".");

  // Variables specific to this block, based on varibles set at higher scope
  // (e.g. .section), such that blocks can be themed from a higher level.
  // The value may change in modified blocks or elements (i.e. block--modifier).
  // Always use css variables along with a default value to maintain the block's
  // independence & modularity (a la BEM).

  // #{$prefix}- : var( , );
  //

  // ==========================================================================
  //    Styles
  // ==========================================================================

  @include f-common;
  bottom          : 0;
  left: 0;
  position        : fixed;
  width           : 100%;
  border-radius   : 5px 5px 0 0;
  transition      : all .2s 0s ease-in-out;
  background-color: var(--c-major-accent, grey);
  box-shadow      : 22px 1px 11px rgba(0,20,30,0.15);
  @include desktop {
    border-radius: 0;
    padding      : 0;
    box-shadow   : none;
    height       : $nav-height;
    position     : absolute;
    top          : 0;
    box-shadow   : $nav-box-shadow;
    & + * {
      margin-top: $nav-height;
    }
  }

  &__inner{
    width                   : 100%;
    margin                  : 0;
    display                 : grid;
    grid-template-columns   : 1fr 1fr 1fr;
    grid-template-rows      : $mobile-nav-height auto auto;
    grid-template-areas     : "logo menu-toggle search" "d1search d1search d1search" "menu menu menu";
    @include limit-width;
    @include desktop {
      grid-template-columns: min-content auto;
      grid-template-rows   : 1fr;
      grid-template-areas  : "logo menu";
      align-items          : center;
      padding              : 0;
    }
  }

  &__button {
    @include button-reset;
    display   : inline-block;
    text-align: center;
    color     : var(--c-neutral-7, black);
    height    : 100%;
    padding   : 8px 8px 15px;

    @include desktop {
      width  : fit-content;
      height : fit-content;
      padding: 0;
    }

    svg:not(.{{ $p }}logo) {
      stroke: $icon-color;
    }

    &:active,
    &:focus {
      #{$bn}__button-icon {
        svg:not(.{{ $p }}-logo) {
          stroke: var(--c-minor-accent-5, grey);
        }

        svg.logo {
          fill: var(--c-minor-accent-5, grey);
        }
      }

      #{$bn}__button-text {
        font-weight: var(--fw-x-bold, 800);
        color      : var(--c-minor-accent-5, grey);
      }

    }

  }

  &__button-text {
    @include f-common;
    font-size     : var(--fs-x-small, .85rem);
    letter-spacing: .01em;
    font-weight   : var(--fw-bold, 500);
    line-height   : .82rem;
    display       : block;
    margin-top    : 2px;
    color         : var(--c-neutral-1, white);

    &--active {
      font-weight: var(--fw-x-bold, 800);
    }
    @include desktop {
      display: none;
    }
  }

  &__button--logo {
    grid-area: logo;
    height   : auto;
    fill      : var(--c-neutral-1, white);
      @include desktop {
        margin-top : $secondary-nav-height;
        margin-left: $lr-padding;
        transform : translate(0,0) scale(1);
        transition: .2s;
        &:hover{
          filter: brightness(1.02);
          transform: translate(0px,-1px) scale(1.01);
        }
      }
    }

  &__button--menu-toggle {
    grid-area: menu-toggle;
    @include desktop {
      display: none;
    }
  }

  &__button--mobile-find-data {
    grid-area: search;
    @include desktop {
      display: none;
    }
  }

  // SEARCH
  // &__button--search {
  //   grid-area: search;
  //   @include desktop {
  //     justify-self: end;
  //     padding     : 0 5px;
  //     margin-top  : $secondary-nav-height;
  //   }
  // }

  // &__button-icon--close {
  //   @include desktop {
  //     margin-top  : 17px;
  //     margin-right: 10px;
  //   }
  // }

  // .d1search__input:focus~.d1search__label {
  //   color: var(--c-major-accent-5, grey);
  // }

  // &__d1search {
  //   grid-area    : d1search;
  //   opacity      : 0;
  //   visibility   : hidden;
  //   transition   : margin .18s 0s ease-in-out, opacity .1s .17s ease-in-out;
  //   margin-bottom: -100%;
  //   margin-top   : 0;
  //   @include desktop {
  //     display      : block;
  //     margin-bottom: 0;
  //     width        : 0;
  //     margin-left  : -400px;
  //     transition   : margin .18s 0s ease-in-out, opacity .1s .17s ease-in-out, width .18s 0s ease-in-out;
  //   }
  //
  //   label {
  //     display: none;
  //   }
  //
  //   & ~ #{$bn}__button--search {
  //     #{$bn}__button-icon--close {
  //       display: none;
  //     }
  //   }
  //
  //   &[aria-hidden="false"] {
  //     opacity      : 1;
  //     visibility   : visible;
  //     margin-bottom: 0;
  //     margin-top   : .7rem;
  //
  //     label {
  //       display: block;
  //     }
  //     // The menu search button when the search is expanded on desktop
  //     & ~ #{$bn}__button--search {
  //       #{$bn}__button-icon--search {
  //         display: none;
  //       }
  //       // A close button (X)
  //       #{$bn}__button-icon--close {
  //         display: block;
  //       }
  //     }
  //     @include desktop {
  //       margin   : $secondary-nav-height 36px 0 0;
  //       transform: none;
  //       width    : 400px;
  //       // The menu when the search is expanded on desktop
  //       & ~ #{$bn}__menu {
  //         width      : 0;
  //         opacity    : 0;
  //         overflow   : hidden;
  //         margin-left: -100%;
  //         transition : all .18s 0s ease-in-out;
  //       }
  //     }
  //   }
  // }

  // ===MENU===
  //
  &__primary-items {
    margin          : 0;
    padding         : 0;
    margin-block-end: 0;
    text-decoration : none;
    @include desktop {
      display        : flex;
      flex-direction : row;
      justify-content: flex-end;
      margin         : 0 auto;
      flex-wrap      : nowrap;
      grid-area      : menu;
      margin-top     : $secondary-nav-height;
      height         : calc(100% - #{$secondary-nav-height});
    }
  }

  &__secondary-nav {
    background-color: var(--c-major-accent-6, darkgrey);
    @include desktop {
      width     : 100%;
      position  : absolute;
      top       : 0;
      left      : 0;
      height    : $secondary-nav-height;
      box-shadow: inset $nav-box-shadow;
    }

    .{{ $p }}menu-item__link {
      @include desktop {
        padding-top   : .7rem;
        padding-bottom: .7rem;
        font-weight   : var(--fw-normal, 400);
      }
    }

    .{{ $p }}menu-item--profile {
      order: -1;
      @include desktop{
        order: unset;
      }
    }
  }

  &__secondary-items {
    margin              : 0;
    padding             : .5rem 0;
    padding-inline-start: 0;
    margin-block-end    : 0;
    text-decoration     : none;
    display: grid;
    @include desktop {
      display        : flex;
      justify-content: flex-end;
      padding        : 0;
      height         : 100%;
      align-items    : center;
      @include limit-width;
    }
  }


  &__menu {
    margin       : 0;
    grid-area    : menu;
    opacity      : 0;
    visibility   : hidden;
    transition   : margin .18s 0s ease-in-out, opacity .1s .17s ease-in-out;
    margin-bottom: -100%;
    height       : 0;
    max-height   : calc(100vh - #{$mobile-nav-height});
    overflow-y   : scroll;
    @include desktop {
      max-height   : $nav-height;
      margin       : 0 5px;
      padding      : 0;
      opacity      : 1;
      height       : $nav-height;
      overflow-y   : visible;
      visibility   : visible;
      margin-bottom: 0;
      transform    : none;
    }

    &[aria-hidden="false"] {
      opacity      : 1;
      visibility   : visible;
      transform    : translateY(0);
      margin-bottom: 0;
      height       : 100%;
      @include desktop {
        transform: none;
        height   : $nav-height;
      }
    }
    // menu on desktop when ARIA label set to hidden (for testing)
    &[aria-hidden="true"] {
      @include desktop {}
    }
  }

  &__minimal-nav{
    display: none;
  }

  // Keep the right-most drop down menu from expanding beyond page limits
  $half-max-width-sub-menu: 150px;

  .{{ $p }}menu-item:last-of-type {
    // When the screen is almost less than the limit for content width, but greater than mobile
    @media only screen and (min-width: $breakpoint) and (max-width: ($content-width + $half-max-width-sub-menu)) {
      .{{ $p }}menu-item__sub-menu {
        transform: none;
        left     : unset;
        right    : 0;
      }
    }
  }
}
