.accordion {

	// ==========================================================================
	//    Variables
	// ==========================================================================

	// Allow the block's base class to be used at all scopes within the block.
	// (bn = block name), use as: #{$bn}. 
	$bn       : &;
	// Use the block's base class as a variable prefix (remove class selector . )
	$prefix   : "--" + str-replace(#{$bn}, ".");

	// Variables specific to this block, based on varibles set at higher scope
	// (e.g. .section), such that blocks can be themed from a higher level.
	// The value may change in modified blocks or elements (i.e. block--modifier).
	// Always use css variables along with a default value to maintain the block's
	// independence & modularity (a la BEM).

	// #{$prefix}- : var( , );

	// ==========================================================================
	//    Styles
	// ==========================================================================

	@include f-common;

	list-style: none;
	margin    : 0;
	padding   : 0;

	& > li {
		margin: 0;
	}
	/**
 * Add zero-width space. needed to ensure Safari + VO respect list semantics.
 * Set the before content to position absolute to negate any visible space
 * the before content could add to the document.
 */
	& > li:before {
		content : "\200B";
		position: absolute;
	}
	/**
 * Accordion Heading
 */
	&__heading {
		font-size    : inherit;
		border-radius: var(--br-default, 0.25rem);
	}

	&__trigger {
		-webkit-appearance: none;
		background-color  : transparent;
		border            : none;
		border-radius     : 0;
		box-shadow        : none;
		cursor            : pointer;
		display           : block;
		font-size         : inherit;
		margin            : 0;
		padding           : .5em 2em .5em 1em;
		position          : relative;
		text-align        : left;
		width             : 100%;
		z-index           : 2;
		border-radius     : var(--br-default, 0.25rem);
		color             : var(--section-fc-body);
	}

	&__trigger:after {
		bottom          : 0;
		content         : '';
		margin          : auto;
		position        : absolute;
		right           : .9rem;
		top             : 0;
		transition      : transform .2s ease-in-out;
		transform-origin: center center;
		border-right    : 1.5px solid var(--section-c-accent, gray);
		border-bottom   : 1.5px solid var(--section-c-accent, gray);
		width           : 10px;
		height          : 10px;
		transform       : rotate(45deg);
	}

	&__trigger:before {
		content : "";
		position: absolute;
		top     : 0;
		left    : 0;
		width   : 100%;
		height  : 100%;
	}

	&__trigger:focus:after,
	&__trigger:hover:after,
	&__trigger[aria-expanded="true"]:after {
		border-color: var(--section-c-accent, gray);
	}

	&__trigger[aria-expanded="true"]:after {
		transform: rotate(225deg);
	}
	/**
 * This is needed to allow a double tap iOS 11
 * Safari + VO to function correctly, if there
 * are multiple elements (wrapper spans) to layout
 * text nodes within the accordion button.

	-- This is not needed if a button only contains text
	   and no other child nodes wrapping the text --

.accordion__trigger > * {
	pointer-events: none;
}
 */
	&__trigger:focus,
	&__trigger:hover {
		outline   : none;
		transition: all .2s ease-in-out;
		filter: brightness(1.03);
	}

	&__trigger:focus {
		// box-shadow: inset 0 0 0 2px var(--section-c-accent, gray);
	}

	&__trigger[aria-disabled="true"]:hover {
		background-color: var(--section-c-accent, gray);
		cursor          : not-allowed;
	}

	&__panel {
		background-color: inherit;
		max-height      : 0;
		overflow        : hidden;
		padding         : .001em 1.25em;
		position        : relative;
		visibility      : hidden;
		z-index         : 1;
	}

	&__panel--transition {
		transition: max-height .2s ease-in-out, padding-top .2s ease-in-out, padding-bottom .2s ease-in-out;
	}

	&__panel > :last-child {
		margin-bottom: 0;
	}

	&__panel[aria-hidden="false"] {
		max-height: 100vh;
		overflow  : auto;
		padding   : 1.25em;
		visibility: visible;
	}

	&__trigger[aria-expanded="true"] {
		background: var(--section-c-background, white);
	}
}
